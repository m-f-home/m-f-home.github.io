{"meta":{"title":"MF","subtitle":"","description":"","author":"m-f-home","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-03-03T03:22:22.000Z","updated":"2020-03-03T03:22:46.152Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-03-03T03:19:57.000Z","updated":"2020-03-03T03:21:03.792Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-03-03T03:23:24.000Z","updated":"2020-03-03T03:23:45.936Z","comments":true,"path":"contact/index.html","permalink":"http://yoursite.com/contact/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-03-03T03:21:25.000Z","updated":"2020-03-03T03:21:53.145Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"SQL数据库语言","slug":"SQL数据库语言","date":"2020-03-17T06:52:00.000Z","updated":"2020-03-17T11:01:01.123Z","comments":true,"path":"2020/03/17/SQL数据库语言/","link":"","permalink":"http://yoursite.com/2020/03/17/SQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/","excerpt":"","text":"数据库基础知识总结一、重要知识点1.SQL数据定义语句的操作对象：模式、表、视图、索引；2.SQL数据定义语句的命令：CREATE、DROP、ALTER；3.索引类型：唯一索引、非唯一索引、聚簇索引。二、SQL语句操作示例1.SQL中常用的关键词及其功能表： 模块 关键词 功能 数据定义 CREATE TABLE 创建数据库表 DROP TABLE 从数据库删除表 ALTER TABLE 修改数据库表结构 CREATE VIEW 创建视图 DROP VIEW 从数据库表删除视图 CREATE INDEX 为数据库表创建一个索引 DROP INDEX 从数据库删除索引 CREATE PROCEDURE 创建一个存储过程 DROP PROCEDURE 从数据库删除存储过程 CREATE TRIGGER 创建触发器 DROP TRIGGER 从数据库删除触发器 数据操作 SELECT 从数据库表中吉纳索数据行和列 INSERT 向数据库表中添加新数据行 DELETE 从数据库中删除数据行 UPDATE 更新数据库表中数据 数据控制 GRANT 授予用户访问权限 DENY 拒接用户访问 REVOKE 接触用户访问权限 事务控制 COMMIT 提交当前事务 ROLLBACK 回滚当前事务 SET TRANSACTION 定义当前事务访问特征 2.CREATE TABLECREATE TABLE user( &#39;id&#39; INT AUTO_INCREMENT, &#39;name&#39; VARCHAR (20), PRIMARY KEY (&#39;id&#39;) );3.UPDATEUPDATE 表名 SET 列名 = 新值 WHERE 列名 = 某值4.INSERTINSERT INTO TABLE_NAME VALUES (VALUE1,VALUE2,...) INSERT INTO TABLE_NAME (列1,列2,...) VALUES (value1,value2,...)5.DELETEDELETE FROM TABLE_NAME WHERE 列名 = 值6.权限分配grant select,insert on &#39; &#39; to &#39;username&#39;7.模糊查询%：表示任意0个或多个字符。可匹配任意类型和长度的字符，中文情况下，使用两个（%%）表示select * from test where text like &#39;%1%&#39;;_：表示任意单个字符。匹配单个任意字符，常用来限制表达式的字符长度语句select * from test where text like &#39;_%1_&#39;;8.JOIN三、主键与外键SQL主键与外键的作用：1.外键取值规则：空置或参照的主键值2.插入非空值时，如果主键中没有这个值，则不能插入3.更新时，不能改为主键表中没有的值4.删除主键表记录时，可以在键外时选定外键记录一起删除还是拒绝删除5.更新主键记录时，同样有级联更新和拒绝执行的选择","categories":[],"tags":[{"name":"SQL","slug":"SQL","permalink":"http://yoursite.com/tags/SQL/"}],"author":"m-f-home"},{"title":"Vue.Js项目","slug":"Vue-Js项目-1","date":"2020-03-06T09:00:00.000Z","updated":"2020-03-06T09:33:02.494Z","comments":true,"path":"2020/03/06/Vue-Js项目-1/","link":"","permalink":"http://yoursite.com/2020/03/06/Vue-Js%E9%A1%B9%E7%9B%AE-1/","excerpt":"","text":"使用&quot;vue init webpack project_name&quot;时出现错误提示：Failed to download repo vuejs-templates/webpack: connect ETIMEDOUT 解决方法：在目录&quot;C:\\Users\\Administrator&amp;quot;下创建文件名为&quot;.vue-templates&quot;的文件夹，从github上将需要的模板文件下载到本地（下载到刚创建的文件夹里，这里用的webpack）git clone https://github.com/vuejs-templates/webpack 到项目文件下再执行vue init webpack project_name --offline 现在可以看到项目成功创建顺便一提：在创建vue项目时，若手误将Use ESLint to your code？选择了yes到build文件下，编辑&quot;webpack.base.conf.js&quot; 注释掉代码即可const createLintingRule = () => ({ /*test: /\\.(js|vue)$/, loader: 'eslint-loader', enforce: 'pre', include: [resolve('src'), resolve('test')], options: { formatter: require('eslint-friendly-formatter'), emitWarning: !config.dev.showEslintErrorsInOverlay }*/ })","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"http://yoursite.com/tags/vue/"}],"author":"m-f-home"},{"title":"使用hexo搭建博客问题总结","slug":"使用hexo搭建博客问题总结","date":"2020-03-03T05:58:00.000Z","updated":"2020-03-08T14:28:43.370Z","comments":true,"path":"2020/03/03/使用hexo搭建博客问题总结/","link":"","permalink":"http://yoursite.com/2020/03/03/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/","excerpt":"","text":"第一次使用Hexo+GitHub搭建个人博客时遇到的问题总结1.从Github上clone时提示错误error: RPC failed; curl 18 transfer closed with outstanding read data remaining 出现上述情况是因为大小限制，在bash命令中输入git config --global http.postBuffer 524288000 完成后可进行查看git config --list 2.同样出现在clone操作时的错误 error: RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054 主要原因是安全设置问题git config --global http.sslVerify &quot;false&quot; 若上述方法不能解决，google上找到的方法可以尝试git config --global pack.windowMemory &quot;100m&quot; git config --global pack.SizeLimit &quot;100m&quot; git config --global pack.threads &quot;1&quot; git config --global pack.window &quot;0&quot; 3.使用cnpm命令时返回错误 [fsevents@^1.0.0] optional install error: Package require os(darwin) not compatible with your platform(win32) 这是一个可忽略的错误，fsevents不适用于Windows（本小白目前架设在windows上的），可通过以下命令：cnpm rebuild node-sass cnpm install4.关于循环出现&quot;The file will have its original line endings in your working directory&quot;由于路径中存在/的符号转义问题，解决方法：git config --global core.autocrlf false5.Spawn-failed在hexo d的时候提示错误Error: Spawn failed at ChildProcess.&lt;anonymous&gt; (M:\\Blog\\myblog\\node_modules\\hexo-util\\lib\\spawn.js:51:21) at ChildProcess.emit (events.js:311:20) at ChildProcess.cp.emit (M:\\Blog\\myblog\\node_modules\\cross-spawn\\lib\\enoent.js:34:29) at Process.ChildProcess._handle.onexit (internal/child_process.js:275:12) 一般情况只需要重新hexo d就能解决，出现错误的原因可能是因为网络不稳定","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}],"author":"m-f-home"}]}